<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
   <mapper namespace="org.go.mapper.ReviewMapper">
   
   <select id="reviewwrite" resultType="org.go.model.ReviewVO" >
     select pname from review group by pname;
     </select>
     
     <insert id="reviewwrite1">
	<!-- <selectKey keyProperty="bno" order="BEFORE" resultType="int">
		select MAX(bno)+1 from board;
	</selectKey> 이 selecKey를 사용하기 위해서는 insert문에 bno를 추가해 주어야 함.-->
		insert into review(title, content, category, id)
		values(#{title},#{content},#{category},#{id})
	<!--  위의 select문에서 bno를 삭제후 아래의 selectKey를 사용하면 board테이블이 비어있어도 사용 가능 -->
	<selectKey keyProperty="rno" order="AFTER" resultType="int">
		select LAST_INSERT_ID();
	</selectKey>
	</insert>
     
     <select id="review" resultType="org.go.model.ReviewVO">
  		select *
  		from(
	  		select @rownum:=@rownum+1 rownum, boardlist.*
			from(
				 select b.*, (select count(*) from b_like where rno=b.rno) as cnthno, (select count(*) from reple where rno=b.rno) as cntrno
				 from review b, (select @rownum:=0) as tmp
				 <choose>
		  			<when test="category != null and !category.equals('')" >
		  				where category!='공지' and category=#{category}
			 			<if test="keyword!=null">
							<choose>
								<when test="period == 'day'.toString()">
									and (regdate between date_ADD(now(), interval -1 day) and now())
								</when>
								<when test="period == 'week'.toString()">
									and (regdate between date_ADD(now(), interval -1 week) and now())
								</when>
								<when test="period == 'month'.toString()">
									and (regdate between date_ADD(now(), interval -1 month) and now())
								</when>
								<when test="period == 'sixMonth'.toString()">
									and (regdate between date_ADD(now(), interval -6 month) and now())
								</when>
								<when test="period == 'year'.toString()">
									and (regdate between date_ADD(now(), interval -1 year) and now())
								</when>
							</choose>
		 					<choose>
						 		<when test="type == 'T'.toString()">
						 			and title like concat('%',#{keyword},'%')
						 		</when>
						 		<when test="type == 'N'.toString()">
						 			and nick like concat('%',#{keyword},'%')
						 		</when>
						 		<when test="type == 'TC'.toString()">
						 			and (title like concat('%',#{keyword},'%')
										or content like concat('%',#{keyword},'%'))
						 		</when>
						 	</choose>	
						</if>
		  			</when>			 
		  			<otherwise>
		  				where category!='공지'
			 			<if test="keyword!=null">
							<choose>
								<when test="period == 'day'.toString()">
									and (regdate between date_ADD(now(), interval -1 day) and now())
								</when>
								<when test="period == 'week'.toString()">
									and (regdate between date_ADD(now(), interval -1 week) and now())
								</when>
								<when test="period == 'month'.toString()">
									and (regdate between date_ADD(now(), interval -1 month) and now())
								</when>
								<when test="period == 'sixMonth'.toString()">
									and (regdate between date_ADD(now(), interval -6 month) and now())
								</when>
								<when test="period == 'year'.toString()">
									and (regdate between date_ADD(now(), interval -1 year) and now())
								</when>
							</choose>
		 					<choose>
						 		<when test="type == 'T'.toString()">
						 			and title like concat('%',#{keyword},'%')
						 		</when>
						 		<when test="type == 'N'.toString()">
						 			and nick like concat('%',#{keyword},'%')
						 		</when>
						 		<when test="type == 'TC'.toString()">
						 			and (title like concat('%',#{keyword},'%')
										or content like concat('%',#{keyword},'%'))
						 		</when>
						 	</choose>
						</if>
		  			</otherwise>			 
				 </choose>
				 <choose>
				 	<when test="orderby == '조회순'.toString()">
				 		order by cnt desc, rno desc
				 	</when>
				 	<when test="orderby == '추천순'.toString()">
				 		order by cnthno desc, rno desc
				 	</when>
				 	<when test="orderby == '최신순'.toString()">
				 		order by regdate desc
				 	</when>
				 	<otherwise>
				 		order by rno desc
				 	</otherwise>
				 </choose>				 
				) as boardlist
			) as bllist
		<![CDATA[
		where rownum> (#{pageNum}-1)*#{amount} and rownum <= #{pageNum}*#{amount}
		]]>
  	</select>

  	<select id="manager" resultType="org.go.model.BoardVO">
  		select * from board where category='공지' order by bno desc;
  	</select>

	<select id="total" resultType="int">
  		select count(*) from board
		<choose> 
  			<when test="category != null and !category.equals('')">
  				where category!='공지' and category=#{category}
	 			<if test="keyword!=null">
					<choose>
						<when test="period == 'day'.toString()">
							and (regdate between date_ADD(now(), interval -1 day) and now())
						</when>
						<when test="period == 'week'.toString()">
							and (regdate between date_ADD(now(), interval -1 week) and now())
						</when>
						<when test="period == 'month'.toString()">
							and (regdate between date_ADD(now(), interval -1 month) and now())
						</when>
						<when test="period == 'sixMonth'.toString()">
							and (regdate between date_ADD(now(), interval -6 month) and now())
						</when>
						<when test="period == 'year'.toString()">
							and (regdate between date_ADD(now(), interval -1 year) and now())
						</when>
					</choose>
 					<choose>
				 		<when test="type == 'T'.toString()">
				 			and title like concat('%',#{keyword},'%')
				 		</when>
				 		<when test="type == 'N'.toString()">
				 			and nick like concat('%',#{keyword},'%')
				 		</when>
				 		<when test="type == 'TC'.toString()">
				 			and (title like concat('%',#{keyword},'%')
								or content like concat('%',#{keyword},'%'))
				 		</when>
				 	</choose>	
				</if>
  			</when>
  			<otherwise>
  				where category!='공지'
	 			<if test="keyword!=null">
					<choose>
						<when test="period == 'day'.toString()">
							and (regdate between date_ADD(now(), interval -1 day) and now())
						</when>
						<when test="period == 'week'.toString()">
							and (regdate between date_ADD(now(), interval -1 week) and now())
						</when>
						<when test="period == 'month'.toString()">
							and (regdate between date_ADD(now(), interval -1 month) and now())
						</when>
						<when test="period == 'sixMonth'.toString()">
							and (regdate between date_ADD(now(), interval -6 month) and now())
						</when>
						<when test="period == 'year'.toString()">
							and (regdate between date_ADD(now(), interval -1 year) and now())
						</when>
					</choose>
 					<choose>
				 		<when test="type == 'T'.toString()">
				 			and title like concat('%',#{keyword},'%')
				 		</when>
				 		<when test="type == 'N'.toString()">
				 			and nick like concat('%',#{keyword},'%')
				 		</when>
				 		<when test="type == 'TC'.toString()">
				 			and (title like concat('%',#{keyword},'%')
								or content like concat('%',#{keyword},'%'))
				 		</when>
				 	</choose>
				</if>
  			</otherwise>
  		</choose>	
	</select>
 
	<select id="imglist" resultType="org.go.model.BoardVO">
select *
from(	
	select @rownum:=@rownum+1 rownum, bno, title, content, nick, regdate, cnt, id, good, category,
	       concat(replace(uploadpath, '\\','/'),'/s_' ,uuid,'_' ,filename) filePath, cnthno, cntrno
	       
	from(
		 select t.*, (select count(*) from b_like where bno=t.bno) as cnthno, (select count(*) from reple where bno=t.bno) as cntrno
		 from(
			  select *
			  from(
				   select uuid, uploadPath, fileName, image, b.bno, title, content, nick, regdate, cnt, id, good, category
				   from attach a
				   join board b
				   on a.bno=b.bno
				   where image=1
				   ) as j
			  group by bno
		 	  <choose> 
	  			  <when test="category != null and !category.equals('')">
	  				  having category!='공지' and category=#{category}
		 			  <if test="keyword!=null">
						  <choose>
							  <when test="period == 'day'.toString()">
								  and (regdate between date_ADD(now(), interval -1 day) and now())
							  </when>
							  <when test="period == 'week'.toString()">
							   	  and (regdate between date_ADD(now(), interval -1 week) and now())
							  </when>
							  <when test="period == 'month'.toString()">
								  and (regdate between date_ADD(now(), interval -1 month) and now())
							  </when>
							  <when test="period == 'sixMonth'.toString()">
								  and (regdate between date_ADD(now(), interval -6 month) and now())
							  </when>
							  <when test="period == 'year'.toString()">
								  and (regdate between date_ADD(now(), interval -1 year) and now())
							  </when>
						  </choose>
	 					  <choose>
					 		  <when test="type == 'T'.toString()">
					 			  and title like concat('%',#{keyword},'%')
					 		  </when>
					 		  <when test="type == 'N'.toString()">
					 			  and nick like concat('%',#{keyword},'%')
					 		  </when>
					 		  <when test="type == 'TC'.toString()">
					 			  and (title like concat('%',#{keyword},'%')
								  or content like concat('%',#{keyword},'%'))
					 		  </when>
					 	  </choose>	
					  </if>
	  			  </when>
	  			  <otherwise>
	  				  having category!='공지'
		 			  <if test="keyword!=null">
						  <choose>
							  <when test="period == 'day'.toString()">
								  and (regdate between date_ADD(now(), interval -1 day) and now())
							  </when>
							  <when test="period == 'week'.toString()">
								  and (regdate between date_ADD(now(), interval -1 week) and now())
							  </when>
							  <when test="period == 'month'.toString()">
								  and (regdate between date_ADD(now(), interval -1 month) and now())
							  </when>
							  <when test="period == 'sixMonth'.toString()">
								  and (regdate between date_ADD(now(), interval -6 month) and now())
							  </when>
							  <when test="period == 'year'.toString()">
								  and (regdate between date_ADD(now(), interval -1 year) and now())
							  </when>
						  </choose>
	 					  <choose>
					 		  <when test="type == 'T'.toString()">
					 			  and title like concat('%',#{keyword},'%')
					 		  </when>
					 		  <when test="type == 'N'.toString()">
					 			  and nick like concat('%',#{keyword},'%')
					 		  </when>
					 		  <when test="type == 'TC'.toString()">
					 			  and (title like concat('%',#{keyword},'%')
								  or content like concat('%',#{keyword},'%'))
					 		  </when>
					 	  </choose>
					  </if>
	  			  </otherwise>
	  		  </choose>
			  ) as t, (select @rownum:=0) as tmp
			 <choose>
				<when test="orderby == '조회순'.toString()">
				 	order by cnt desc, bno desc
				</when>
				<when test="orderby == '추천순'.toString()">
				 	order by cnthno desc, bno desc
				</when>
				<when test="orderby == '최신순'.toString()">
				 	order by regdate desc
				</when>
				<otherwise>
				 	order by bno desc
				 </otherwise>
			 </choose>
	     ) as balist
	)as blimglist
	<![CDATA[
	where rownum> (#{pageNum}-1)*#{amount} and rownum <= #{pageNum}*#{amount}
	]]>
	</select>
    
    <select id="imgtotal" resultType="int">
	select count(*)
	from(
		 select *
		 from(
			  select uuid, uploadPath, fileName, image, b.bno, title, content, nick, regdate, cnt, id, good, category
			  from attach a
			  join board b
			  on a.bno=b.bno
			  where image=1
			  ) as j
		  group by bno
		  <choose> 
  			<when test="category != null and !category.equals('')">
  				having category!='공지' and category=#{category}
	 			<if test="keyword!=null">
					<choose>
						<when test="period == 'day'.toString()">
							and (regdate between date_ADD(now(), interval -1 day) and now())
						</when>
						<when test="period == 'week'.toString()">
							and (regdate between date_ADD(now(), interval -1 week) and now())
						</when>
						<when test="period == 'month'.toString()">
							and (regdate between date_ADD(now(), interval -1 month) and now())
						</when>
						<when test="period == 'sixMonth'.toString()">
							and (regdate between date_ADD(now(), interval -6 month) and now())
						</when>
						<when test="period == 'year'.toString()">
							and (regdate between date_ADD(now(), interval -1 year) and now())
						</when>
					</choose>
 					<choose>
				 		<when test="type == 'T'.toString()">
				 			and title like concat('%',#{keyword},'%')
				 		</when>
				 		<when test="type == 'N'.toString()">
				 			and nick like concat('%',#{keyword},'%')
				 		</when>
				 		<when test="type == 'TC'.toString()">
				 			and (title like concat('%',#{keyword},'%')
								or content like concat('%',#{keyword},'%'))
				 		</when>
				 	</choose>	
				</if>
  			</when>
  			<otherwise>
  				having category!='공지'
	 			<if test="keyword!=null">
					<choose>
						<when test="period == 'day'.toString()">
							and (regdate between date_ADD(now(), interval -1 day) and now())
						</when>
						<when test="period == 'week'.toString()">
							and (regdate between date_ADD(now(), interval -1 week) and now())
						</when>
						<when test="period == 'month'.toString()">
							and (regdate between date_ADD(now(), interval -1 month) and now())
						</when>
						<when test="period == 'sixMonth'.toString()">
							and (regdate between date_ADD(now(), interval -6 month) and now())
						</when>
						<when test="period == 'year'.toString()">
							and (regdate between date_ADD(now(), interval -1 year) and now())
						</when>
					</choose>
 					<choose>
				 		<when test="type == 'T'.toString()">
				 			and title like concat('%',#{keyword},'%')
				 		</when>
				 		<when test="type == 'N'.toString()">
				 			and nick like concat('%',#{keyword},'%')
				 		</when>
				 		<when test="type == 'TC'.toString()">
				 			and (title like concat('%',#{keyword},'%')
								or content like concat('%',#{keyword},'%'))
				 		</when>
				 	</choose>
				</if>
  			 </otherwise>
  		 </choose>
		 ) as t;    
    </select>
   </mapper>